package dev.lpsmods.morefood.core;

import dev.lpsmods.morefood.block.*;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.SoundType;
import net.minecraft.world.level.block.TallGrassBlock;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.material.MapColor;
import net.minecraft.world.level.material.PushReaction;

public class ModBlocks {
    public static final Block ALMOND_SACK;
    public static final Block AVOCADO_SACK;
    public static final Block BANANA_SACK;
    public static final Block BARLEY_SEED_SACK;
    public static final Block BEAN_SACK;
    public static final Block BLACK_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block BLACK_CANDLE_CHOCOLATE_CAKE;
    public static final Block BLACK_CANDLE_POUND_CAKE;
    public static final Block BLACK_CANDLE_RAINBOW_CAKE;
    public static final Block BLACK_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block BLUEBERRY_SACK;
    public static final Block BLUEBERRY_SEED_SACK;
    public static final Block BLUE_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block BLUE_CANDLE_CHOCOLATE_CAKE;
    public static final Block BLUE_CANDLE_POUND_CAKE;
    public static final Block BLUE_CANDLE_RAINBOW_CAKE;
    public static final Block BLUE_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block BROWN_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block BROWN_CANDLE_CHOCOLATE_CAKE;
    public static final Block BROWN_CANDLE_POUND_CAKE;
    public static final Block BROWN_CANDLE_RAINBOW_CAKE;
    public static final Block BROWN_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block BUCKWHEAT_SACK;
    public static final Block CABBAGE_SACK;
    public static final Block CABBAGE_SEED_SACK;
    public static final Block CAKE_WITH_CHERRIES;
    public static final Block CANDLE_CAKE_WITH_CHERRIES;
    public static final Block CANDLE_CHOCOLATE_CAKE;
    public static final Block CANDLE_POUND_CAKE;
    public static final Block CANDLE_RAINBOW_CAKE;
    public static final Block CANDLE_REDWHITEBLUE_CAKE;
    public static final Block CHERRY_SACK;
    public static final Block CHOCOLATE_CAKE;
    public static final Block CHOCOLATE_CHUNK_OATMEAL_COOKIE_SACK;
    public static final Block COCONUT_SACK;
    public static final Block COFFEE_BEAN_SACK;
    public static final Block CORN_COB_SACK;
    public static final Block CORN_FLOUR_SACK;
    public static final Block CORN_SACK;
    public static final Block CRANBERRY_SACK;
    public static final Block CYAN_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block CYAN_CANDLE_CHOCOLATE_CAKE;
    public static final Block CYAN_CANDLE_POUND_CAKE;
    public static final Block CYAN_CANDLE_RAINBOW_CAKE;
    public static final Block CYAN_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block EGGPLANT_SACK;
    public static final Block EGGPLANT_SEED_SACK;
    public static final Block FLOUR_SACK;
    public static final Block GARLIC_SACK;
    public static final Block GHERKIN_SACK;
    public static final Block GHERKIN_SEED_SACK;
    public static final Block GRAPE_SACK;
    public static final Block GRAPE_SEED_SACK;
    public static final Block GRAY_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block GRAY_CANDLE_CHOCOLATE_CAKE;
    public static final Block GRAY_CANDLE_POUND_CAKE;
    public static final Block GRAY_CANDLE_RAINBOW_CAKE;
    public static final Block GRAY_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block GREEN_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block GREEN_CANDLE_CHOCOLATE_CAKE;
    public static final Block GREEN_CANDLE_POUND_CAKE;
    public static final Block GREEN_CANDLE_RAINBOW_CAKE;
    public static final Block GREEN_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block HOPS_SACK;
    public static final Block HOPS_SEED_SACK;
    public static final Block LARGE_PUMPKIN_PALE;
    public static final Block LEMON_SACK;
    public static final Block LETTUCE_SACK;
    public static final Block LETTUCE_SEED_SACK;
    public static final Block LIGHT_BLUE_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block LIGHT_BLUE_CANDLE_CHOCOLATE_CAKE;
    public static final Block LIGHT_BLUE_CANDLE_POUND_CAKE;
    public static final Block LIGHT_BLUE_CANDLE_RAINBOW_CAKE;
    public static final Block LIGHT_BLUE_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block LIGHT_GRAY_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block LIGHT_GRAY_CANDLE_CHOCOLATE_CAKE;
    public static final Block LIGHT_GRAY_CANDLE_POUND_CAKE;
    public static final Block LIGHT_GRAY_CANDLE_RAINBOW_CAKE;
    public static final Block LIGHT_GRAY_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block LIME_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block LIME_CANDLE_CHOCOLATE_CAKE;
    public static final Block LIME_CANDLE_POUND_CAKE;
    public static final Block LIME_CANDLE_RAINBOW_CAKE;
    public static final Block LIME_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block MAGENTA_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block MAGENTA_CANDLE_CHOCOLATE_CAKE;
    public static final Block MAGENTA_CANDLE_POUND_CAKE;
    public static final Block MAGENTA_CANDLE_RAINBOW_CAKE;
    public static final Block MAGENTA_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block NETHER_COOKIE_SACK;
    public static final Block OATMEAL_COOKIE_SACK;
    public static final Block OAT_SACK;
    public static final Block OAT_SEED_SACK;
    public static final Block OLIVES_SACK;
    public static final Block ONION_SACK;
    public static final Block ONION_SEED_SACK;
    public static final Block ORANGE_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block ORANGE_CANDLE_CHOCOLATE_CAKE;
    public static final Block ORANGE_CANDLE_POUND_CAKE;
    public static final Block ORANGE_CANDLE_RAINBOW_CAKE;
    public static final Block ORANGE_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block ORANGE_SACK;
    public static final Block PEANUT_SACK;
    public static final Block PEANUT_SEED_SACK;
    public static final Block PEPPER_SACK;
    public static final Block PEPPER_SEED_SACK;
    public static final Block PINK_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block PINK_CANDLE_CHOCOLATE_CAKE;
    public static final Block PINK_CANDLE_POUND_CAKE;
    public static final Block PINK_CANDLE_RAINBOW_CAKE;
    public static final Block PINK_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block PLUM_SACK;
    public static final Block POISONOUS_SWEET_POTATO_SACK;
    public static final Block POISON_BERRY_SACK;
    public static final Block POUND_CAKE;
    public static final Block PURPLE_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block PURPLE_CANDLE_CHOCOLATE_CAKE;
    public static final Block PURPLE_CANDLE_POUND_CAKE;
    public static final Block PURPLE_CANDLE_RAINBOW_CAKE;
    public static final Block PURPLE_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block RAINBOW_CAKE;
    public static final Block RASPBERRY_SACK;
    public static final Block RASPBERRY_SEED_SACK;
    public static final Block REDWHITEBLUE_CAKE;
    public static final Block RED_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block RED_CANDLE_CHOCOLATE_CAKE;
    public static final Block RED_CANDLE_POUND_CAKE;
    public static final Block RED_CANDLE_RAINBOW_CAKE;
    public static final Block RED_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block RICE_SACK;
    public static final Block RICE_SEED_SACK;
    public static final Block SAP_CAULDRON;
    public static final Block SMALL_PUMPKIN_PALE;
    public static final Block SOYBEAN_SACK;
    public static final Block SPEARMINT;
    public static final Block SPINACH_SACK;
    public static final Block SPINACH_SEED_SACK;
    public static final Block STRAWBERRY_SACK;
    public static final Block STRAWBERRY_SEED_SACK;
    public static final Block SUGAR_COOKIE_SACK;
    public static final Block SWEET_POTATO_SACK;
    public static final Block TEA_LEAF_SACK;
    public static final Block TEA_SEED_SACK;
    public static final Block TOMATO_SACK;
    public static final Block TOMATO_SEED_SACK;
    public static final Block VANILLA_POD_SACK;
    public static final Block VANILLA_SEED_SACK;
    public static final Block WATERMINT;
    public static final Block WHITE_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block WHITE_CANDLE_CHOCOLATE_CAKE;
    public static final Block WHITE_CANDLE_POUND_CAKE;
    public static final Block WHITE_CANDLE_RAINBOW_CAKE;
    public static final Block WHITE_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block WOODEN_TREE_TAP;
    public static final Block YEAST_SACK;
    public static final Block YELLOW_CANDLE_CAKE_WITH_CHERRIES;
    public static final Block YELLOW_CANDLE_CHOCOLATE_CAKE;
    public static final Block YELLOW_CANDLE_POUND_CAKE;
    public static final Block YELLOW_CANDLE_RAINBOW_CAKE;
    public static final Block YELLOW_CANDLE_REDWHITEBLUE_CAKE;
    public static final Block ALMOND_SAPLING;
    public static final Block APPLE_SAPLING;
    public static final Block AVOCADO_SAPLING;
    public static final Block BANANA_SAPLING;
    public static final Block BARLEY_CROP;
    public static final Block BEAN_BUSH;
    public static final Block BLUEBERRY_BUSH;
    public static final Block BUCKWHEAT_CROP;
    public static final Block CABBAGE_CROP;
    public static final Block COFFEE_BUSH;
    public static final Block CORN_CROP;
    public static final Block CRANBERRY_BUSH;
    public static final Block EGGPLANT_BUSH;
    public static final Block GARLIC_CROP;
    public static final Block GHERKIN_BUSH;
    public static final Block GRAPE_BUSH;
    public static final Block HANGING_ALMOND;
    public static final Block HANGING_APPLE;
    public static final Block HANGING_AVOCADO;
    public static final Block HANGING_BANANA;
    public static final Block HANGING_CHERRY;
    public static final Block HANGING_COCONUT;
    public static final Block HANGING_LEMON;
    public static final Block HANGING_OLIVE;
    public static final Block HANGING_ORANGE;
    public static final Block HANGING_PLUM;
    public static final Block HOPS_CROP;
    public static final Block LEMON_SAPLING;
    public static final Block LETTUCE_CROP;
    public static final Block OAT_CROP;
    public static final Block OLIVE_SAPLING;
    public static final Block ONION_CROP;
    public static final Block ORANGE_SAPLING;
    public static final Block PALM_SAPLING;
    public static final Block PEANUT_CROP;
    public static final Block PEPPERMINT_BUSH;
    public static final Block PEPPER_BUSH;
    public static final Block PLUM_SAPLING;
    public static final Block POISON_BERRY_BUSH;
    public static final Block POTTED_ALMOND_SAPLING;
    public static final Block POTTED_APPLE_SAPLING;
    public static final Block POTTED_AVOCADO_SAPLING;
    public static final Block POTTED_BANANA_SAPLING;
    public static final Block POTTED_LEMON_SAPLING;
    public static final Block POTTED_OLIVE_SAPLING;
    public static final Block POTTED_ORANGE_SAPLING;
    public static final Block POTTED_PALM_SAPLING;
    public static final Block POTTED_PLUM_SAPLING;
    public static final Block POTTED_SPEARMINT;
    public static final Block POTTED_WATERMINT;
    public static final Block RASPBERRY_BUSH;
    public static final Block RICE_CROP;
    public static final Block SOYBEAN_BUSH;
    public static final Block SPINACH_CROP;
    public static final Block STRAWBERRY_BUSH;
    public static final Block TEA_BUSH;
    public static final Block TOMATO_BUSH;
    public static final Block VANILLA_BUSH;

    private static Block createBush(String cropItem) {
        return new MoreFoodBushBlock(cropItem,BlockBehaviour.Properties.of().mapColor(MapColor.DARK_GREEN).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.CROP).pistonBehavior(PistonBehavior.DESTROY));
    }
    private static Block createSack(MapColor mapColor) {
        return new SackBlock(BlockBehaviour.Properties.of().mapColor(mapColor).strength(0.3f, 0.3f));
    }

    private static Block createCrop() {
        return new MoreFoodCropBlock(BlockBehaviour.Properties.of().mapColor(MapColor.DARK_GREEN).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.CROP).pistonBehavior(PistonBehavior.DESTROY));
    }

    private static Block createTallCrop() {
        return new TallCropBlock(BlockBehaviour.Properties.of().mapColor(MapColor.DARK_GREEN).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.CROP).pistonBehavior(PistonBehavior.DESTROY));
    }

    private static Block createCandleCake(Block cake, Block candle) {
        return new MoreFoodCandleCakeBlock(cake, candle, BlockBehaviour.Properties.ofFullCopy(Blocks.CANDLE_CAKE));
    }

    private static Block createCake() {
        return new MoreFoodCakeBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.CAKE));
    }

    private static Block createFlowerPot(Block content) {
        return new FlowerPotBlock(content, BlockBehaviour.Properties.of().breakInstantly().nonOpaque().pistonBehavior(PistonBehavior.DESTROY));
    }

    private static Block createHangingCrop(String cropItem, Block saplingBlock) {
        return new HangingCropBlock(cropItem, saplingBlock, BlockBehaviour.Properties.of().mapColor(MapColor.DARK_GREEN).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.CROP).pistonBehavior(PistonBehavior.DESTROY));
    }

    private static Block createSapling(SaplingGenerator generator) {
        return new SaplingBlock(generator, BlockBehaviour.Properties.of().mapColor(MapColor.DARK_GREEN).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS).pistonBehavior(PistonBehavior.DESTROY).nonOpaque());
    }

    public static void init() {}

    static {
        ALMOND_SACK = createSack(MapColor.STONE);
        ALMOND_SAPLING = createSapling(MoreFoodSaplingGenerator.ALMOND);
        APPLE_SAPLING = createSapling(MoreFoodSaplingGenerator.APPLE);
        AVOCADO_SACK = createSack(MapColor.STONE);
        AVOCADO_SAPLING = createSapling(MoreFoodSaplingGenerator.AVOCADO);
        BANANA_SACK = createSack(MapColor.STONE);
        BANANA_SAPLING = createSapling(MoreFoodSaplingGenerator.BANANA);
        BARLEY_CROP = createCrop();
        BARLEY_SEED_SACK = createSack(MapColor.STONE);
        BEAN_BUSH = createBush("morefood:beans");
        BEAN_SACK = createSack(MapColor.STONE);
        BLACK_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.BLACK_CANDLE);
        BLACK_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.BLACK_CANDLE);
        BLACK_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.BLACK_CANDLE);
        BLACK_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.BLACK_CANDLE);
        BLACK_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.BLACK_CANDLE);
        BLUEBERRY_BUSH = createBush("morefood:blueberries");
        BLUEBERRY_SACK = createSack(MapColor.STONE);
        BLUEBERRY_SEED_SACK = createSack(MapColor.STONE);
        BLUE_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.BLUE_CANDLE);
        BLUE_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.BLUE_CANDLE);
        BLUE_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.BLUE_CANDLE);
        BLUE_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.BLUE_CANDLE);
        BLUE_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.BLUE_CANDLE);
        BROWN_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.BROWN_CANDLE);
        BROWN_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.BROWN_CANDLE);
        BROWN_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.BROWN_CANDLE);
        BROWN_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.BROWN_CANDLE);
        BROWN_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.BROWN_CANDLE);
        BUCKWHEAT_CROP = createCrop();
        BUCKWHEAT_SACK = createSack(MapColor.STONE);
        CABBAGE_CROP = createCrop();
        CABBAGE_SACK = createSack(MapColor.STONE);
        CABBAGE_SEED_SACK = createSack(MapColor.STONE);
        CAKE_WITH_CHERRIES = createCake();
        CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.CANDLE);
        CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.CANDLE);
        CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.CANDLE);
        CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.CANDLE);
        CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.CANDLE);
        CHERRY_SACK = createSack(MapColor.STONE);
        CHOCOLATE_CAKE = createCake();
        CHOCOLATE_CHUNK_OATMEAL_COOKIE_SACK = createSack(MapColor.STONE);
        COCONUT_SACK = createSack(MapColor.STONE);
        COFFEE_BEAN_SACK = createSack(MapColor.STONE);
        COFFEE_BUSH = createBush("morefood:coffee_beans");
        CORN_COB_SACK = createSack(MapColor.STONE);
        CORN_CROP = createTallCrop();
        CORN_FLOUR_SACK = createSack(MapColor.STONE);
        CORN_SACK = createSack(MapColor.STONE);
        CRANBERRY_BUSH = createBush("morefood:cranberries");
        CRANBERRY_SACK = createSack(MapColor.STONE);
        CYAN_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.CYAN_CANDLE);
        CYAN_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.CYAN_CANDLE);
        CYAN_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.CYAN_CANDLE);
        CYAN_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.CYAN_CANDLE);
        CYAN_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.CYAN_CANDLE);
        EGGPLANT_BUSH = createBush("morefood:eggplant");
        EGGPLANT_SACK = createSack(MapColor.STONE);
        EGGPLANT_SEED_SACK = createSack(MapColor.STONE);
        FLOUR_SACK = createSack(MapColor.STONE);
        GARLIC_CROP = createCrop();
        GARLIC_SACK = createSack(MapColor.STONE);
        GHERKIN_BUSH = createBush("morefood:gherkin");
        GHERKIN_SACK = createSack(MapColor.STONE);
        GHERKIN_SEED_SACK = createSack(MapColor.STONE);
        GRAPE_BUSH = createBush("morefood:grape");
        GRAPE_SACK = createSack(MapColor.STONE);
        GRAPE_SEED_SACK = createSack(MapColor.STONE);
        GRAY_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.GRAY_CANDLE);
        GRAY_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.GRAY_CANDLE);
        GRAY_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.GRAY_CANDLE);
        GRAY_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.GRAY_CANDLE);
        GRAY_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.GRAY_CANDLE);
        GREEN_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.GREEN_CANDLE);
        GREEN_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.GREEN_CANDLE);
        GREEN_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.GREEN_CANDLE);
        GREEN_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.GREEN_CANDLE);
        GREEN_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.GREEN_CANDLE);
        HANGING_ALMOND = createHangingCrop("morefood:almonds", ALMOND_SAPLING);
        HANGING_APPLE = createHangingCrop("minecraft:apple", APPLE_SAPLING);
        HANGING_AVOCADO = createHangingCrop("morefood:avocado", AVOCADO_SAPLING);
        HANGING_BANANA = createHangingCrop("morefood:banana", BANANA_SAPLING);
        HANGING_CHERRY = createHangingCrop("morefood:cherries", Blocks.CHERRY_SAPLING);
        HANGING_COCONUT = createHangingCrop("morefood:coconut", PALM_SAPLING);
        HANGING_LEMON = createHangingCrop("morefood:lemon", LEMON_SAPLING);
        HANGING_OLIVE = createHangingCrop("morefood:olives", OLIVE_SAPLING);
        HANGING_ORANGE = createHangingCrop("morefood:orange", ORANGE_SAPLING);
        HANGING_PLUM = createHangingCrop("morefood:plum", PLUM_SAPLING);
        HOPS_CROP = createCrop();
        HOPS_SACK = createSack(MapColor.STONE);
        HOPS_SEED_SACK = createSack(MapColor.STONE);
        LARGE_PUMPKIN_PALE = new LargePaleBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).strength(2.0f, 3.0f).randomTicks().sound(SoundType.STONE).pushReaction(PushReaction.DESTROY));
        LEMON_SACK = createSack(MapColor.STONE);
        LEMON_SAPLING = createSapling(MoreFoodSaplingGenerator.LEMON);
        LETTUCE_CROP = createCrop();
        LETTUCE_SACK = createSack(MapColor.STONE);
        LETTUCE_SEED_SACK = createSack(MapColor.STONE);
        LIGHT_BLUE_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.LIGHT_BLUE_CANDLE);
        LIGHT_BLUE_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.LIGHT_BLUE_CANDLE);
        LIGHT_BLUE_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.LIGHT_BLUE_CANDLE);
        LIGHT_BLUE_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.LIGHT_BLUE_CANDLE);
        LIGHT_BLUE_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.LIGHT_BLUE_CANDLE);
        LIGHT_GRAY_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.LIGHT_GRAY_CANDLE);
        LIGHT_GRAY_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.LIGHT_GRAY_CANDLE);
        LIGHT_GRAY_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.LIGHT_GRAY_CANDLE);
        LIGHT_GRAY_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.LIGHT_GRAY_CANDLE);
        LIGHT_GRAY_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.LIGHT_GRAY_CANDLE);
        LIME_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.LIME_CANDLE);
        LIME_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.LIME_CANDLE);
        LIME_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.LIME_CANDLE);
        LIME_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.LIME_CANDLE);
        LIME_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.LIME_CANDLE);
        MAGENTA_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.MAGENTA_CANDLE);
        MAGENTA_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.MAGENTA_CANDLE);
        MAGENTA_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.MAGENTA_CANDLE);
        MAGENTA_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.MAGENTA_CANDLE);
        MAGENTA_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.MAGENTA_CANDLE);
        NETHER_COOKIE_SACK = createSack(MapColor.STONE);
        OATMEAL_COOKIE_SACK = createSack(MapColor.STONE);
        OAT_CROP = createCrop();
        OAT_SACK = createSack(MapColor.STONE);
        OAT_SEED_SACK = createSack(MapColor.STONE);
        OLIVES_SACK = createSack(MapColor.STONE);
        OLIVE_SAPLING = createSapling(MoreFoodSaplingGenerator.OLIVE);
        ONION_CROP = createCrop();
        ONION_SACK = createSack(MapColor.STONE);
        ONION_SEED_SACK = createSack(MapColor.STONE);
        ORANGE_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.ORANGE_CANDLE);
        ORANGE_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.ORANGE_CANDLE);
        ORANGE_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.ORANGE_CANDLE);
        ORANGE_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.ORANGE_CANDLE);
        ORANGE_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.ORANGE_CANDLE);
        ORANGE_SACK = createSack(MapColor.STONE);
        ORANGE_SAPLING = createSapling(MoreFoodSaplingGenerator.ORANGE);
        PALM_SAPLING = createSapling(MoreFoodSaplingGenerator.PALM);
        PEANUT_CROP = createCrop();
        PEANUT_SACK = createSack(MapColor.STONE);
        PEANUT_SEED_SACK = createSack(MapColor.STONE);
        PEPPERMINT_BUSH = createBush("morefood:peppermint");
        PEPPER_BUSH = createBush("morefood:pepper");
        PEPPER_SACK = createSack(MapColor.STONE);
        PEPPER_SEED_SACK = createSack(MapColor.STONE);
        PINK_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.PINK_CANDLE);
        PINK_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.PINK_CANDLE);
        PINK_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.PINK_CANDLE);
        PINK_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.PINK_CANDLE);
        PINK_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.PINK_CANDLE);
        PLUM_SACK = createSack(MapColor.STONE);
        PLUM_SAPLING = createSapling(MoreFoodSaplingGenerator.PLUM);
        POISONOUS_SWEET_POTATO_SACK = createSack(MapColor.STONE);
        POISON_BERRY_BUSH = createBush("morefood:poison_berries");
        POISON_BERRY_SACK = createSack(MapColor.STONE);
        POTTED_ALMOND_SAPLING = createFlowerPot(ALMOND_SAPLING);
        POTTED_APPLE_SAPLING = createFlowerPot(APPLE_SAPLING);
        POTTED_AVOCADO_SAPLING = createFlowerPot(AVOCADO_SAPLING);
        POTTED_BANANA_SAPLING = createFlowerPot(BANANA_SAPLING);
        POTTED_LEMON_SAPLING = createFlowerPot(LEMON_SAPLING);
        POTTED_OLIVE_SAPLING = createFlowerPot(OLIVE_SAPLING);
        POTTED_ORANGE_SAPLING = createFlowerPot(ORANGE_SAPLING);
        POTTED_PALM_SAPLING = createFlowerPot(PALM_SAPLING);
        POTTED_PLUM_SAPLING = createFlowerPot(PLUM_SAPLING);
        POTTED_SPEARMINT = createFlowerPot(SPEARMINT);
        POTTED_WATERMINT = createFlowerPot(WATERMINT);
        POUND_CAKE = createCake();
        PURPLE_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.PURPLE_CANDLE);
        PURPLE_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.PURPLE_CANDLE);
        PURPLE_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.PURPLE_CANDLE);
        PURPLE_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.PURPLE_CANDLE);
        PURPLE_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.PURPLE_CANDLE);
        RAINBOW_CAKE = createCake();
        RASPBERRY_BUSH = createBush("morefood:raspberry");
        RASPBERRY_SACK = createSack(MapColor.STONE);
        RASPBERRY_SEED_SACK = createSack(MapColor.STONE);
        REDWHITEBLUE_CAKE = createCake();
        RED_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.RED_CANDLE);
        RED_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.RED_CANDLE);
        RED_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.RED_CANDLE);
        RED_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.RED_CANDLE);
        RED_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.RED_CANDLE);
        RICE_CROP = createCrop();
        RICE_SACK = createSack(MapColor.STONE);
        RICE_SEED_SACK = createSack(MapColor.STONE);
        SAP_CAULDRON = new SapCauldronBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.CAULDRON));
        SMALL_PUMPKIN_PALE = new SmallPaleBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).strength(2.0f, 3.0f).randomTicks().sound(SoundType.STONE).pushReaction(PushReaction.DESTROY));
        SOYBEAN_BUSH = createBush("morefood:soybeans");
        SOYBEAN_SACK = createSack(MapColor.STONE);
        SPEARMINT = new TallGrassBlock(BlockBehaviour.Properties.of().mapColor(MapColor.PLANT).replaceable().noCollission().instabreak().sound(SoundType.GRASS).offsetType(BlockBehaviour.OffsetType.XYZ).ignitedByLava().pushReaction(PushReaction.DESTROY));
        SPINACH_CROP = createCrop();
        SPINACH_SACK = createSack(MapColor.STONE);
        SPINACH_SEED_SACK = createSack(MapColor.STONE);
        STRAWBERRY_BUSH = createBush("morefood:strawberry");
        STRAWBERRY_SACK = createSack(MapColor.STONE);
        STRAWBERRY_SEED_SACK = createSack(MapColor.STONE);
        SUGAR_COOKIE_SACK = createSack(MapColor.STONE);
        SWEET_POTATO_SACK = createSack(MapColor.STONE);
        TEA_BUSH = createBush("morefood:tea_leaves");
        TEA_LEAF_SACK = createSack(MapColor.STONE);
        TEA_SEED_SACK = createSack(MapColor.STONE);
        TOMATO_BUSH = createBush("morefood:tomato");
        TOMATO_SACK = createSack(MapColor.STONE);
        TOMATO_SEED_SACK = createSack(MapColor.STONE);
        VANILLA_BUSH = createBush("morefood:vanilla_pod");
        VANILLA_POD_SACK = createSack(MapColor.STONE);
        VANILLA_SEED_SACK = createSack(MapColor.STONE);
        WATERMINT = new TallGrassBlock(BlockBehaviour.Properties.of().mapColor(MapColor.PLANT).replaceable().noCollission().instabreak().sound(SoundType.GRASS).offsetType(BlockBehaviour.OffsetType.XYZ).ignitedByLava().pushReaction(PushReaction.DESTROY));
        WHITE_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.WHITE_CANDLE);
        WHITE_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.WHITE_CANDLE);
        WHITE_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.WHITE_CANDLE);
        WHITE_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.WHITE_CANDLE);
        WHITE_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.WHITE_CANDLE);
        WOODEN_TREE_TAP = new TreeTapBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).strength(2.0f, 3.0f).randomTicks().sound(SoundType.WOOD).pushReaction(PushReaction.DESTROY));
        YEAST_SACK = createSack(MapColor.STONE);
        YELLOW_CANDLE_CAKE_WITH_CHERRIES = createCandleCake(CAKE_WITH_CHERRIES, Blocks.YELLOW_CANDLE);
        YELLOW_CANDLE_CHOCOLATE_CAKE = createCandleCake(CHOCOLATE_CAKE, Blocks.YELLOW_CANDLE);
        YELLOW_CANDLE_POUND_CAKE = createCandleCake(POUND_CAKE, Blocks.YELLOW_CANDLE);
        YELLOW_CANDLE_RAINBOW_CAKE = createCandleCake(RAINBOW_CAKE, Blocks.YELLOW_CANDLE);
        YELLOW_CANDLE_REDWHITEBLUE_CAKE = createCandleCake(REDWHITEBLUE_CAKE, Blocks.YELLOW_CANDLE);
    }
}
